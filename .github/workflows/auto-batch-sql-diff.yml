name: Auto-batch SQL (lean)

on:
  push:
    branches: [ main ]
    paths:
      - 'sql/new/*.sql'      # only run when source files change
    paths-ignore:
      - 'releases/sql/**'    # avoid loops
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: auto-batch-numbering
  cancel-in-progress: false

env:
  RELEASES_DIR: releases/sql

jobs:
  batch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 2 }   # enough for before..after diff

      - name: Build batch (use run number; concat changed ddl/dml)
        run: |
          set -euo pipefail

          BEFORE="${{ github.event.before }}"
          AFTER="${{ github.sha }}"
          if [ -z "${BEFORE}" ] || [ "${BEFORE}" = "0000000000000000000000000000000000000000" ]; then
            CHANGED=$(git ls-files 'sql/new/ddl*.sql' 'sql/new/dml*.sql' | sort || true)
          else
            CHANGED=$(git diff --name-only "${BEFORE}" "${AFTER}" -- 'sql/new/ddl*.sql' 'sql/new/dml*.sql' | sort || true)
          fi
          [ -z "${CHANGED}" ] && echo "No changes." && exit 0
          echo "${CHANGED}"

          printf -v RUNPAD "%03d" "${GITHUB_RUN_NUMBER}"
          BATCH_DIR="${{ env.RELEASES_DIR }}/${RUNPAD}"
          mkdir -p "${BATCH_DIR}/ddl" "${BATCH_DIR}/dml"

          # Helper to concat a class (ddl|dml)
          concat_type () {
            local kind="$1"; shift
            local nums
            nums=$(echo "${CHANGED}" | { grep -E "^sql/new/${kind}[0-9]+\.sql$" || true; } \
                   | sed -n "s#^sql/new/${kind}\([0-9]\+\)\.sql$#\1#p" | sort -n | xargs || true)
            [ -z "${nums}" ] && return 1
            local out="${BATCH_DIR}/${kind}/${kind}.sql"
            : > "${out}"
            for n in ${nums}; do
              local src="sql/new/${kind}${n}.sql"
              [ -f "${src}" ] || continue
              {
                echo "-- ===== BEGIN ${kind}${n}.sql ====="
                cat  "${src}"
                echo
                echo "-- ===== END ${kind}${n}.sql ====="
                echo
              } >> "${out}"
            done
            echo "Created ${out}"
          }

          MADE=0
          concat_type ddl && MADE=1 || true
          concat_type dml && MADE=1 || true
          [ "${MADE}" -eq 0 ] && echo "No valid ddl/dml after filtering." && exit 0

          echo "BATCH_DIR=${BATCH_DIR}" >> "$GITHUB_ENV"
          echo "MADE=1" >> "$GITHUB_ENV"
          find "${BATCH_DIR}" -type f -name '*.sql' | sort

      - name: Create Pull Request
        if: env.MADE == '1'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "[skip ci] feat(sql): batch ${GITHUB_RUN_NUMBER}"
          branch: "batch/${GITHUB_RUN_NUMBER}"
          base: main
          title: "SQL Batch ${GITHUB_RUN_NUMBER}"
          body: |
            Batch **${GITHUB_RUN_NUMBER}** created from changed `sql/new/ddlN.sql` / `dmlN.sql`.
            Concatenated into:
            - `${{ env.BATCH_DIR }}/ddl/ddl.sql` (if any DDL changed)
            - `${{ env.BATCH_DIR }}/dml/dml.sql` (if any DML changed)
          labels: sql
          delete-branch: true
